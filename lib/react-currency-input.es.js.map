{"version":3,"file":"react-currency-input.es.js","sources":["../src/object-assign-polyfill.js","../src/mask.js","../src/index.js"],"sourcesContent":["Object.assign = Object.assign ||\n  function(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n","\nexport default function mask(value, precision = 2, decimalSeparator = '.', thousandSeparator = ',', allowNegative = false, prefix = '', suffix = ''){\n    // provide some default values and arg validation.\n    if (precision < 0) { precision = 0; } // precision cannot be negative\n    if (precision > 20) { precision = 20; } // precision cannot be greater than 20\n    \n    if (value === null || value===undefined) {\n          return {\n              value: 0,\n              maskedValue: ''\n          };\n     }\n  \n    value = String(value); //if the given value is a Number, let's convert into String to manipulate that\n\n    if (value.length == 0) {\n        return {\n            value: 0,\n            maskedValue: ''\n        };\n    }\n\n\n    // extract digits. if no digits, fill in a zero.\n    let digits = value.match(/\\d/g) || ['0'];\n    \n    let numberIsNegative = false;\n    if (allowNegative) {\n        let negativeSignCount = (value.match(/-/g) || []).length;\n        // number will be negative if we have an odd number of \"-\"\n        // ideally, we should only ever have 0, 1 or 2 (positive number, making a number negative\n        // and making a negative number positive, respectively)\n        numberIsNegative = negativeSignCount % 2 === 1;\n        \n        // if every digit in the array is '0', then the number should never be negative\n        let allDigitsAreZero = true;\n        for (let idx=0; idx < digits.length; idx += 1) {\n            if(digits[idx] !== '0') {\n                allDigitsAreZero = false;\n                break;\n            }\n        }\n        if (allDigitsAreZero) {\n            numberIsNegative = false;\n        }\n    }\n\n    // zero-pad a input\n    while (digits.length <= precision) { digits.unshift('0'); }\n\n    if (precision > 0) {\n        // add the decimal separator\n        digits.splice(digits.length - precision, 0, \".\");\n    }\n\n    // clean up extraneous digits like leading zeros.\n    digits = Number(digits.join('')).toFixed(precision).split('');\n    let raw = Number(digits.join(''));\n\n    let decimalpos = digits.length - precision - 1;  // -1 needed to position the decimal separator before the digits.\n    if (precision > 0) {\n        // set the final decimal separator\n        digits[decimalpos] = decimalSeparator;\n    } else {\n        // when precision is 0, there is no decimal separator.\n        decimalpos = digits.length;\n    }\n\n    // add in any thousand separators\n    for (let x=decimalpos - 3; x > 0; x = x - 3) {\n        digits.splice(x, 0, thousandSeparator);\n    }\n\n    // if we have a prefix or suffix, add them in.\n    if (prefix.length > 0) { digits.unshift(prefix); }\n    if (suffix.length > 0) { digits.push(suffix); }\n\n    // if the number is negative, insert a \"-\" to\n    // the front of the array and negate the raw value\n    if (allowNegative && numberIsNegative) {\n        digits.unshift('-');\n        raw = -raw;\n    }\n\n    return {\n        value: raw,\n        maskedValue: digits.join('').trim()\n    };\n}\n","import \"./object-assign-polyfill\";\n\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport mask from \"./mask.js\";\n\n// IE* parseFloat polyfill\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/parseFloat#Polyfill\nNumber.parseFloat = parseFloat;\n\nclass CurrencyInput extends Component {\n  constructor(props) {\n    super(props);\n    this.prepareProps = this.prepareProps.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n    this.setSelectionRange = this.setSelectionRange.bind(this);\n    this.state = this.prepareProps(this.props);\n\n    this.inputSelectionStart = 1;\n    this.inputSelectionEnd = 1;\n  }\n\n  /**\n   * Exposes the current masked value.\n   *\n   * @returns {String}\n   */\n  getMaskedValue() {\n    return this.state.maskedValue;\n  }\n\n  /**\n   * General function used to cleanup and define the final props used for rendering\n   * @returns {{ maskedValue: {String}, value: {Number}, customProps: {Object} }}\n   */\n  prepareProps(props) {\n    let customProps = { ...props }; // babeljs converts to Object.assign, then polyfills.\n    delete customProps.onChange;\n    delete customProps.onChangeEvent;\n    delete customProps.value;\n    delete customProps.decimalSeparator;\n    delete customProps.thousandSeparator;\n    delete customProps.precision;\n    delete customProps.inputType;\n    delete customProps.allowNegative;\n    delete customProps.allowEmpty;\n    delete customProps.prefix;\n    delete customProps.suffix;\n    delete customProps.selectAllOnFocus;\n    delete customProps.autoFocus;\n\n    let initialValue = props.value;\n    if (initialValue === null) {\n      initialValue = props.allowEmpty ? null : \"\";\n    } else {\n      if (typeof initialValue == \"string\") {\n        // Some people, when confronted with a problem, think \"I know, I'll use regular expressions.\"\n        // Now they have two problems.\n\n        // Strip out thousand separators, prefix, and suffix, etc.\n        if (props.thousandSeparator === \".\") {\n          // special handle the . thousand separator\n          initialValue = initialValue.replace(/\\./g, \"\");\n        }\n\n        if (props.decimalSeparator != \".\") {\n          // fix the decimal separator\n          initialValue = initialValue.replace(\n            new RegExp(props.decimalSeparator, \"g\"),\n            \".\"\n          );\n        }\n\n        //Strip out anything that is not a digit, -, or decimal separator\n        initialValue = initialValue.replace(/[^0-9-.]/g, \"\");\n\n        // now we can parse.\n        initialValue = Number.parseFloat(initialValue);\n      }\n      initialValue = Number(initialValue).toLocaleString(undefined, {\n        style: \"decimal\",\n        minimumFractionDigits: props.precision,\n        maximumFractionDigits: props.precision\n      });\n    }\n\n    const { maskedValue, value } = mask(\n      initialValue,\n      props.precision,\n      props.decimalSeparator,\n      props.thousandSeparator,\n      props.allowNegative,\n      props.prefix,\n      props.suffix\n    );\n\n    return { maskedValue, value, customProps };\n  }\n\n  /**\n   * Component lifecycle function.\n   * Invoked when a component is receiving new props. This method is not called for the initial render.\n   *\n   * @param nextProps\n   * @see https://facebook.github.io/react/docs/component-specs.html#updating-componentwillreceiveprops\n   */\n  componentWillReceiveProps(nextProps) {\n    this.setState(this.prepareProps(nextProps));\n  }\n\n  /**\n   * Component lifecycle function.\n   * @returns {XML}\n   * @see https://facebook.github.io/react/docs/react-component.html#componentdidmount\n   */\n  componentDidMount() {\n    let node = ReactDOM.findDOMNode(this.theInput);\n    let selectionStart, selectionEnd;\n\n    if (this.props.autoFocus) {\n      this.theInput.focus();\n      selectionEnd = this.state.maskedValue.length - this.props.suffix.length;\n      selectionStart = selectionEnd;\n    } else {\n      selectionEnd = Math.min(\n        node.selectionEnd,\n        this.theInput.value.length - this.props.suffix.length\n      );\n      selectionStart = Math.min(node.selectionStart, selectionEnd);\n    }\n    this.setSelectionRange(node, selectionStart, selectionEnd);\n  }\n\n  /**\n   * Component lifecycle function\n   * @returns {XML}\n   * @see https://facebook.github.io/react/docs/react-component.html#componentwillupdate\n   */\n  componentWillUpdate() {\n    let node = ReactDOM.findDOMNode(this.theInput);\n    this.inputSelectionStart = node.selectionStart;\n    this.inputSelectionEnd = node.selectionEnd;\n  }\n\n  /**\n   * Component lifecycle function.\n   * @returns {XML}\n   * @see https://facebook.github.io/react/docs/react-component.html#componentdidupdate\n   */\n  componentDidUpdate(prevProps, prevState) {\n    const { decimalSeparator } = this.props;\n    let node = ReactDOM.findDOMNode(this.theInput);\n    let isNegative = (this.theInput.value.match(/-/g) || []).length % 2 === 1;\n    let minPos = this.props.prefix.length + (isNegative ? 1 : 0);\n    let selectionEnd = Math.max(\n      minPos,\n      Math.min(\n        this.inputSelectionEnd,\n        this.theInput.value.length - this.props.suffix.length\n      )\n    );\n    let selectionStart = Math.max(\n      minPos,\n      Math.min(this.inputSelectionEnd, selectionEnd)\n    );\n\n    let regexEscapeRegex = /[-[\\]{}()*+?.,\\\\^$|#\\s]/g;\n    let separatorsRegex = new RegExp(\n      decimalSeparator.replace(regexEscapeRegex, \"\\\\$&\") +\n        \"|\" +\n        this.props.thousandSeparator.replace(regexEscapeRegex, \"\\\\$&\"),\n      \"g\"\n    );\n    let currSeparatorCount = (\n      this.state.maskedValue.match(separatorsRegex) || []\n    ).length;\n    let prevSeparatorCount = (\n      prevState.maskedValue.match(separatorsRegex) || []\n    ).length;\n    let adjustment = Math.max(currSeparatorCount - prevSeparatorCount, 0);\n\n    selectionEnd = selectionEnd + adjustment;\n    selectionStart = selectionStart + adjustment;\n\n    const precision = Number(this.props.precision);\n\n    let baselength =\n      this.props.suffix.length +\n      this.props.prefix.length +\n      (precision > 0 ? decimalSeparator.length : 0) + // if precision is 0 there will be no decimal part\n      precision +\n      1; // This is to account for the default '0' value that comes before the decimal separator\n\n    if (this.state.maskedValue.length == baselength) {\n      // if we are already at base length, position the cursor at the end.\n      selectionEnd = this.theInput.value.length - this.props.suffix.length;\n      selectionStart = selectionEnd;\n    }\n    this.setSelectionRange(node, selectionStart, selectionEnd);\n    this.inputSelectionStart = selectionStart;\n    this.inputSelectionEnd = selectionEnd;\n  }\n\n  /**\n   * Set selection range only if input is in focused state\n   * @param node DOMElement\n   * @param start number\n   * @param end number\n   */\n  setSelectionRange(node, start, end) {\n    if (document.activeElement === node) {\n      node.setSelectionRange(start, end);\n    }\n  }\n\n  /**\n   * onChange Event Handler\n   * @param event\n   */\n  handleChange(event) {\n    event.preventDefault();\n    let { maskedValue, value } = mask(\n      event.target.value,\n      this.props.precision,\n      this.props.decimalSeparator,\n      this.props.thousandSeparator,\n      this.props.allowNegative,\n      this.props.prefix,\n      this.props.suffix\n    );\n\n    event.persist(); // fixes issue #23\n\n    this.setState({ maskedValue, value }, () => {\n      this.props.onChange(maskedValue, value, event);\n      this.props.onChangeEvent(\n        { ...event, target: { ...event.target, value } },\n        value,\n        maskedValue\n      );\n    });\n  }\n\n  /**\n   * onFocus Event Handler\n   * @param event\n   */\n  handleFocus(event) {\n    if (!this.theInput) return;\n\n    //Whenever we receive focus check to see if the position is before the suffix, if not, move it.\n    let selectionEnd = this.theInput.value.length - this.props.suffix.length;\n    let isNegative = (this.theInput.value.match(/-/g) || []).length % 2 === 1;\n    let selectionStart = this.props.prefix.length + (isNegative ? 1 : 0);\n    this.props.selectAllOnFocus &&\n      event.target.setSelectionRange(selectionStart, selectionEnd);\n    this.inputSelectionStart = selectionStart;\n    this.inputSelectionEnd = selectionEnd;\n  }\n\n  handleBlur(event) {\n    this.inputSelectionStart = 0;\n    this.inputSelectionEnd = 0;\n  }\n\n  /**\n   * Component lifecycle function.\n   * @returns {XML}\n   * @see https://facebook.github.io/react/docs/component-specs.html#render\n   */\n  render() {\n    return (\n      <input\n        ref={input => {\n          this.theInput = input;\n        }}\n        type={this.props.inputType}\n        value={this.state.maskedValue}\n        onChange={this.handleChange}\n        onFocus={this.handleFocus}\n        onMouseUp={this.handleFocus}\n        {...this.state.customProps}\n      />\n    );\n  }\n}\n\n/**\n * Prop validation.\n * @see https://facebook.github.io/react/docs/component-specs.html#proptypes\n */\n\nCurrencyInput.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  decimalSeparator: PropTypes.string,\n  thousandSeparator: PropTypes.string,\n  precision: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  inputType: PropTypes.string,\n  allowNegative: PropTypes.bool,\n  allowEmpty: PropTypes.bool,\n  prefix: PropTypes.string,\n  suffix: PropTypes.string,\n  selectAllOnFocus: PropTypes.bool\n};\n\nCurrencyInput.defaultProps = {\n  onChange: function(maskValue, value, event) {\n    /*no-op*/\n  },\n  onChangeEvent: function(event, maskValue, value) {\n    /*no-op*/\n  },\n  autoFocus: false,\n  value: \"0\",\n  decimalSeparator: \".\",\n  thousandSeparator: \",\",\n  precision: \"2\",\n  inputType: \"text\",\n  allowNegative: false,\n  prefix: \"\",\n  suffix: \"\",\n  selectAllOnFocus: false\n};\n\nexport default CurrencyInput;\n"],"names":["arguments","let","super","const","this"],"mappings":";;;;AAAA,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM;EAC3B,SAAS,MAAM,EAAE;;;IACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;MACzC,IAAI,MAAM,GAAGA,WAAS,CAAC,CAAC,CAAC,CAAC;MAC1B,KAAK,IAAI,GAAG,IAAI,MAAM,EAAE;QACtB,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE;UACrD,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;SAC3B;OACF;KACF;IACD,OAAO,MAAM,CAAC;GACf,CAAC;;ACVW,SAAS,IAAI,CAAC,KAAK,EAAE,SAAa,EAAE,gBAAsB,EAAE,iBAAuB,EAAE,aAAqB,EAAE,MAAW,EAAE,MAAW,CAAC;yCAAvG,GAAG,CAAC,CAAkB;uDAAA,GAAG,GAAG,CAAmB;yDAAA,GAAG,GAAG,CAAe;iDAAA,GAAG,KAAK,CAAQ;mCAAA,GAAG,EAAE,CAAQ;mCAAA,GAAG,EAAE;;;IAE/I,IAAI,SAAS,GAAG,CAAC,EAAE,EAAE,SAAS,GAAG,CAAC,CAAC,EAAE;IACrC,IAAI,SAAS,GAAG,EAAE,EAAE,EAAE,SAAS,GAAG,EAAE,CAAC,EAAE;;IAEvC,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,GAAG,SAAS,EAAE;UACnC,OAAO;cACH,KAAK,EAAE,CAAC;cACR,WAAW,EAAE,EAAE;WAClB,CAAC;MACN;;IAEF,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;;IAEtB,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;QACnB,OAAO;YACH,KAAK,EAAE,CAAC;YACR,WAAW,EAAE,EAAE;SAClB,CAAC;KACL;;;;IAIDC,IAAI,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;IAEzCA,IAAI,gBAAgB,GAAG,KAAK,CAAC;IAC7B,IAAI,aAAa,EAAE;QACfA,IAAI,iBAAiB,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC;;;;QAIzD,gBAAgB,GAAG,iBAAiB,GAAG,CAAC,KAAK,CAAC,CAAC;;;QAG/CA,IAAI,gBAAgB,GAAG,IAAI,CAAC;QAC5B,KAAKA,IAAI,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE;YAC3C,GAAG,MAAM,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE;gBACpB,gBAAgB,GAAG,KAAK,CAAC;gBACzB,MAAM;aACT;SACJ;QACD,IAAI,gBAAgB,EAAE;YAClB,gBAAgB,GAAG,KAAK,CAAC;SAC5B;KACJ;;;IAGD,OAAO,MAAM,CAAC,MAAM,IAAI,SAAS,EAAE,EAAE,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE;;IAE3D,IAAI,SAAS,GAAG,CAAC,EAAE;;QAEf,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,SAAS,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;KACpD;;;IAGD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IAC9DA,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;;IAElCA,IAAI,UAAU,GAAG,MAAM,CAAC,MAAM,GAAG,SAAS,GAAG,CAAC,CAAC;IAC/C,IAAI,SAAS,GAAG,CAAC,EAAE;;QAEf,MAAM,CAAC,UAAU,CAAC,GAAG,gBAAgB,CAAC;KACzC,MAAM;;QAEH,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;KAC9B;;;IAGD,KAAKA,IAAI,CAAC,CAAC,UAAU,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;QACzC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,iBAAiB,CAAC,CAAC;KAC1C;;;IAGD,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,EAAE,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE;IAClD,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE;;;;IAI/C,IAAI,aAAa,IAAI,gBAAgB,EAAE;QACnC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACpB,GAAG,GAAG,CAAC,GAAG,CAAC;KACd;;IAED,OAAO;QACH,KAAK,EAAE,GAAG;QACV,WAAW,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE;KACtC,CAAC;CACL;;;;AC/ED,MAAM,CAAC,UAAU,GAAG,UAAU,CAAC;;AAE/B,IAAM,aAAa;EAAmB,sBACzB,CAAC,KAAK,EAAE;IACjBC,YAAK,KAAA,CAAC,MAAA,KAAK,CAAC,CAAC;IACb,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/C,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;IAE3C,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;IAC7B,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;GAC5B;;;;sDAAA;;;;;;;EAOD,wBAAA,cAAc,8BAAG;IACf,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;GAC/B,CAAA;;;;;;EAMD,wBAAA,YAAY,0BAAC,KAAK,EAAE;IAClBD,IAAI,WAAW,GAAG,kBAAE,KAAQ,CAAE,CAAC;IAC/B,OAAO,WAAW,CAAC,QAAQ,CAAC;IAC5B,OAAO,WAAW,CAAC,aAAa,CAAC;IACjC,OAAO,WAAW,CAAC,KAAK,CAAC;IACzB,OAAO,WAAW,CAAC,gBAAgB,CAAC;IACpC,OAAO,WAAW,CAAC,iBAAiB,CAAC;IACrC,OAAO,WAAW,CAAC,SAAS,CAAC;IAC7B,OAAO,WAAW,CAAC,SAAS,CAAC;IAC7B,OAAO,WAAW,CAAC,aAAa,CAAC;IACjC,OAAO,WAAW,CAAC,UAAU,CAAC;IAC9B,OAAO,WAAW,CAAC,MAAM,CAAC;IAC1B,OAAO,WAAW,CAAC,MAAM,CAAC;IAC1B,OAAO,WAAW,CAAC,gBAAgB,CAAC;IACpC,OAAO,WAAW,CAAC,SAAS,CAAC;;IAE7BA,IAAI,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC;IAC/B,IAAI,YAAY,KAAK,IAAI,EAAE;MACzB,YAAY,GAAG,KAAK,CAAC,UAAU,GAAG,IAAI,GAAG,EAAE,CAAC;KAC7C,MAAM;MACL,IAAI,OAAO,YAAY,IAAI,QAAQ,EAAE;;;;;QAKnC,IAAI,KAAK,CAAC,iBAAiB,KAAK,GAAG,EAAE;;UAEnC,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;SAChD;;QAED,IAAI,KAAK,CAAC,gBAAgB,IAAI,GAAG,EAAE;;UAEjC,YAAY,GAAG,YAAY,CAAC,OAAO;YACjC,IAAI,MAAM,CAAC,KAAK,CAAC,gBAAgB,EAAE,GAAG,CAAC;YACvC,GAAG;WACJ,CAAC;SACH;;;QAGD,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;;;QAGrD,YAAY,GAAG,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;OAChD;MACD,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,cAAc,CAAC,SAAS,EAAE;QAC5D,KAAK,EAAE,SAAS;QAChB,qBAAqB,EAAE,KAAK,CAAC,SAAS;QACtC,qBAAqB,EAAE,KAAK,CAAC,SAAS;OACvC,CAAC,CAAC;KACJ;;IAED,OAA4B,GAAG,IAAI;MACjC,YAAY;MACZ,KAAK,CAAC,SAAS;MACf,KAAK,CAAC,gBAAgB;MACtB,KAAK,CAAC,iBAAiB;MACvB,KAAK,CAAC,aAAa;MACnB,KAAK,CAAC,MAAM;MACZ,KAAK,CAAC,MAAM;KACb;IARO,IAAA,WAAW;IAAE,IAAA,KAAK,aAApB;;IAUN,OAAO,EAAE,aAAA,WAAW,EAAE,OAAA,KAAK,EAAE,aAAA,WAAW,EAAE,CAAC;GAC5C,CAAA;;;;;;;;;EASD,wBAAA,yBAAyB,uCAAC,SAAS,EAAE;IACnC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC;GAC7C,CAAA;;;;;;;EAOD,wBAAA,iBAAiB,iCAAG;IAClBA,IAAI,IAAI,GAAG,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC/CA,IAAI,cAAc,EAAE,YAAY,CAAC;;IAEjC,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;MACxB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;MACtB,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;MACxE,cAAc,GAAG,YAAY,CAAC;KAC/B,MAAM;MACL,YAAY,GAAG,IAAI,CAAC,GAAG;QACrB,IAAI,CAAC,YAAY;QACjB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM;OACtD,CAAC;MACF,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;KAC9D;IACD,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,cAAc,EAAE,YAAY,CAAC,CAAC;GAC5D,CAAA;;;;;;;EAOD,wBAAA,mBAAmB,mCAAG;IACpBA,IAAI,IAAI,GAAG,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC/C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,cAAc,CAAC;IAC/C,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC;GAC5C,CAAA;;;;;;;EAOD,wBAAA,kBAAkB,gCAAC,SAAS,EAAE,SAAS,EAAE;IACvC,OAA0B,GAAG,IAAI,CAAC,KAAK;IAA/B,IAAA,gBAAgB,wBAAlB;IACNA,IAAI,IAAI,GAAG,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC/CA,IAAI,UAAU,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,GAAG,CAAC,KAAK,CAAC,CAAC;IAC1EA,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,IAAI,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7DA,IAAI,YAAY,GAAG,IAAI,CAAC,GAAG;MACzB,MAAM;MACN,IAAI,CAAC,GAAG;QACN,IAAI,CAAC,iBAAiB;QACtB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM;OACtD;KACF,CAAC;IACFA,IAAI,cAAc,GAAG,IAAI,CAAC,GAAG;MAC3B,MAAM;MACN,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,EAAE,YAAY,CAAC;KAC/C,CAAC;;IAEFA,IAAI,gBAAgB,GAAG,0BAA0B,CAAC;IAClDA,IAAI,eAAe,GAAG,IAAI,MAAM;MAC9B,gBAAgB,CAAC,OAAO,CAAC,gBAAgB,EAAE,MAAM,CAAC;QAChD,GAAG;QACH,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,OAAO,CAAC,gBAAgB,EAAE,MAAM,CAAC;MAChE,GAAG;KACJ,CAAC;IACFA,IAAI,kBAAkB,GAAG;MACvB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,EAAE;MACnD,MAAM,CAAC;IACTA,IAAI,kBAAkB,GAAG;MACvB,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,EAAE;MAClD,MAAM,CAAC;IACTA,IAAI,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,kBAAkB,GAAG,kBAAkB,EAAE,CAAC,CAAC,CAAC;;IAEtE,YAAY,GAAG,YAAY,GAAG,UAAU,CAAC;IACzC,cAAc,GAAG,cAAc,GAAG,UAAU,CAAC;;IAE7CE,IAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;;IAE/CF,IAAI,UAAU;MACZ,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM;MACxB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM;OACvB,SAAS,GAAG,CAAC,GAAG,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC;MAC7C,SAAS;MACT,CAAC,CAAC;;IAEJ,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,IAAI,UAAU,EAAE;;MAE/C,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;MACrE,cAAc,GAAG,YAAY,CAAC;KAC/B;IACD,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,cAAc,EAAE,YAAY,CAAC,CAAC;IAC3D,IAAI,CAAC,mBAAmB,GAAG,cAAc,CAAC;IAC1C,IAAI,CAAC,iBAAiB,GAAG,YAAY,CAAC;GACvC,CAAA;;;;;;;;EAQD,wBAAA,iBAAiB,+BAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE;IAClC,IAAI,QAAQ,CAAC,aAAa,KAAK,IAAI,EAAE;MACnC,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;KACpC;GACF,CAAA;;;;;;EAMD,wBAAA,YAAY,0BAAC,KAAK,EAAE;;;IAClB,KAAK,CAAC,cAAc,EAAE,CAAC;IACvB,OAA0B,GAAG,IAAI;MAC/B,KAAK,CAAC,MAAM,CAAC,KAAK;MAClB,IAAI,CAAC,KAAK,CAAC,SAAS;MACpB,IAAI,CAAC,KAAK,CAAC,gBAAgB;MAC3B,IAAI,CAAC,KAAK,CAAC,iBAAiB;MAC5B,IAAI,CAAC,KAAK,CAAC,aAAa;MACxB,IAAI,CAAC,KAAK,CAAC,MAAM;MACjB,IAAI,CAAC,KAAK,CAAC,MAAM;KAClB;IARK,IAAA,WAAW;IAAE,IAAA,KAAK,aAApB;;IAUJ,KAAK,CAAC,OAAO,EAAE,CAAC;;IAEhB,IAAI,CAAC,QAAQ,CAAC,EAAE,aAAA,WAAW,EAAE,OAAA,KAAK,EAAE,EAAE,YAAG;MACvCG,MAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;MAC/CA,MAAI,CAAC,KAAK,CAAC,aAAa;QACtB,kBAAE,KAAQ,EAAE,CAAA,MAAM,EAAE,kBAAE,KAAQ,CAAC,MAAM,EAAE,QAAA,KAAK,CAAA,CAAE,CAAA,CAAE;QAChD,KAAK;QACL,WAAW;OACZ,CAAC;KACH,CAAC,CAAC;GACJ,CAAA;;;;;;EAMD,wBAAA,WAAW,yBAAC,KAAK,EAAE;IACjB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAA,OAAO,EAAA;;;IAG3BH,IAAI,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;IACzEA,IAAI,UAAU,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,GAAG,CAAC,KAAK,CAAC,CAAC;IAC1EA,IAAI,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,IAAI,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACrE,IAAI,CAAC,KAAK,CAAC,gBAAgB;MACzB,KAAK,CAAC,MAAM,CAAC,iBAAiB,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;IAC/D,IAAI,CAAC,mBAAmB,GAAG,cAAc,CAAC;IAC1C,IAAI,CAAC,iBAAiB,GAAG,YAAY,CAAC;GACvC,CAAA;;EAED,wBAAA,UAAU,wBAAC,KAAK,EAAE;IAChB,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;IAC7B,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;GAC5B,CAAA;;;;;;;EAOD,wBAAA,MAAM,sBAAG;;;IACP;MACE,qBAAC;QACC,EAAA,KAAI,UAAC,KAAK,EAAC;UACTG,MAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACvB,EACD,MAAK,IAAK,CAAC,KAAK,CAAC,SAAS,EAC1B,OAAM,IAAK,CAAC,KAAK,CAAC,WAAW,EAC7B,UAAS,IAAK,CAAC,YAAY,EAC3B,SAAQ,IAAK,CAAC,WAAW,EACzB,WAAU,IAAK,CAAC,WAAW,EAAC,EAC5B,IAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,CAC3B;MACF;GACH,CAAA;;;EAnRyB,SAoR3B,GAAA;;;;;;;AAOD,aAAa,CAAC,SAAS,GAAG;EACxB,QAAQ,EAAE,SAAS,CAAC,IAAI;EACxB,KAAK,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;EAChE,gBAAgB,EAAE,SAAS,CAAC,MAAM;EAClC,iBAAiB,EAAE,SAAS,CAAC,MAAM;EACnC,SAAS,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;EACpE,SAAS,EAAE,SAAS,CAAC,MAAM;EAC3B,aAAa,EAAE,SAAS,CAAC,IAAI;EAC7B,UAAU,EAAE,SAAS,CAAC,IAAI;EAC1B,MAAM,EAAE,SAAS,CAAC,MAAM;EACxB,MAAM,EAAE,SAAS,CAAC,MAAM;EACxB,gBAAgB,EAAE,SAAS,CAAC,IAAI;CACjC,CAAC;;AAEF,aAAa,CAAC,YAAY,GAAG;EAC3B,QAAQ,EAAE,SAAS,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE;;GAE3C;EACD,aAAa,EAAE,SAAS,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE;;GAEhD;EACD,SAAS,EAAE,KAAK;EAChB,KAAK,EAAE,GAAG;EACV,gBAAgB,EAAE,GAAG;EACrB,iBAAiB,EAAE,GAAG;EACtB,SAAS,EAAE,GAAG;EACd,SAAS,EAAE,MAAM;EACjB,aAAa,EAAE,KAAK;EACpB,MAAM,EAAE,EAAE;EACV,MAAM,EAAE,EAAE;EACV,gBAAgB,EAAE,KAAK;CACxB,CAAC;;;;"}